name: Deploy iOS

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment

jobs:
  ios:
    name: Build and Deploy
    runs-on: macos-latest
    environment: ${{ github.event.inputs.environment }}
    permissions:
      contents: read
      actions: write
    steps:
      - name: Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: "6.0.3"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Setup CocoaPods
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          version: 1.15.2

      - name: Read app version
        id: version
        uses: beaconbrigade/package-json-version@v0.3.2

      - name: Install dependencies
        run: yarn

      - name: Make .env
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_VITE_API_ENDPOINT: ${{ vars.API_ENDPOINT }}
          envkey_VITE_ADMIN_SUBSCRIPTION: ${{ vars.ADMIN_SUBSCRIPTION }}
          envkey_VITE_ADMIN_ENDPOINT: ${{ vars.ADMIN_ENDPOINT }}
          envkey_VITE_ENVIRONMENT: ${{ github.event.inputs.environment }}
          envkey_VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          envkey_VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          envkey_VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          envkey_VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          envkey_VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          envkey_VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          envkey_VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          envkey_VITE_REVENUECAT_API_KEY: ${{ secrets.REVENUECAT_API_KEY }}
          envkey_VITE_SENTRY_DNS: ${{ vars.SENTRY_DNS }}
          envkey_VITE_RUDDERSTACK_WRITE_KEY: ${{ vars.RUDDERSTACK_WRITE_KEY }}
          envkey_VITE_RUDDERSTACK_DATA_URL: ${{ vars.RUDDERSTACK_DATA_URL }}

      - name: Build application
        run: yarn build

      - name: Upload build folder
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: dist/

      - name: Capacitor sync
        run: npx cap sync

      - name: Bump build number
        uses: r5n-labs/mobile-version-bump-action@v2
        with:
          build-number: ${{ github.run_number }}
          app-version: ${{ steps.version.outputs.version }}
          ios-project-path: ./ios/App

      - name: Import code sign
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.IOS_PROD_CERTIFICATE }}
          p12-password: ${{ secrets.IOS_PROD_CERTIFICATE_PASSWORD }}

      - name: Download provisioning
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ vars.IOS_BUNDLE_ID }}
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

      - name: Pod install
        run: pod install --project-directory=${{ github.workspace }}/ios/App

      - name: Build Release
        run: |
          xcodebuild -quiet -workspace ${{ github.workspace }}/ios/App/App.xcworkspace -scheme "App" clean archive -archivePath "Actions" -configuration "Release"
          ls ${{ github.workspace }}

      - name: Export .ipa
        env:
          EXPORT_PLIST: ${{ secrets.IOS_EXPORT_PRODUCTION }}
        run: |
          EXPORT_PLIST_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_PLIST" | base64 --decode -o $EXPORT_PLIST_PATH
          xcodebuild -exportArchive -archivePath ${{ github.workspace }}/Actions.xcarchive -exportOptionsPlist $EXPORT_PLIST_PATH -exportPath $RUNNER_TEMP/export
          ls $RUNNER_TEMP/export

      - name: Decode auth API Key file and save it
        env:
          API_KEY_BASE64: ${{ secrets.APPSTORE_API_PRIVATE_KEY_BASE64 }}
        run: |
          mkdir -p ~/private_keys
          echo -n "$API_KEY_BASE64" | base64 --decode -o ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
          ls ~/private_keys

      - name: Push to TestFlight
        run: |
          xcrun altool --validate-app -f $RUNNER_TEMP/export/App.ipa -t ios --apiKey ${{ secrets.APPSTORE_API_KEY_ID }} --apiIssuer ${{ secrets.APPSTORE_ISSUER_ID }}
          xcrun altool --upload-app -f $RUNNER_TEMP/export/App.ipa -t ios --apiKey ${{ secrets.APPSTORE_API_KEY_ID }} --apiIssuer ${{ secrets.APPSTORE_ISSUER_ID }}